[{"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\index.js":"1","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\App.js":"2","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\reportWebVitals.js":"3","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\HeaderComponent\\HeaderComponent.jsx":"4","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\baseUrl.jsx":"5","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\MainComponent.js":"6","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\SignUpComponent\\SignUpComponent.jsx":"7","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\LogInComponent\\LogInComponent.jsx":"8","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\FishComponent\\FishEditComponent.jsx":"9","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\ClosedWaterSupplyInstallation\\ClosedWaterSupplyInstallationComponent.jsx":"10","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PoolComponent\\PoolListByOrganizationIdComponent.jsx":"11","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\KindOfFishComponent\\KindOfFishListComponent.jsx":"12","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\FishComponent\\FishListByPoolIdComponent.jsx":"13","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PoolComponent\\PoolListByCWIIdComponent.jsx":"14","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\HerdComponent\\HerdListByPoolIdComponent.jsx":"15","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\MilkingComponent\\MilkinhListByFishIdComponent.jsx":"16","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PregnancyComponent\\PregancyListByFishIdComponent.jsx":"17","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PoolComponent\\ExpectedWeightOfFishInThePoolByCWIIdComponent.jsx":"18","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\FishComponent\\FishListForRelocationByPoolIdComponent.jsx":"19","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\ClosedWaterSupplyInstallation\\AddClosedWaterSupplyInstallationComponent.jsx":"20"},{"size":517,"mtime":1607027272748,"results":"21","hashOfConfig":"22"},{"size":407,"mtime":1607027256648,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1607009553089,"results":"24","hashOfConfig":"22"},{"size":2402,"mtime":1607367748737,"results":"25","hashOfConfig":"22"},{"size":434,"mtime":1607359544741,"results":"26","hashOfConfig":"22"},{"size":3398,"mtime":1607459316546,"results":"27","hashOfConfig":"22"},{"size":2888,"mtime":1607160666310,"results":"28","hashOfConfig":"22"},{"size":6784,"mtime":1607185973493,"results":"29","hashOfConfig":"22"},{"size":5036,"mtime":1607357018678,"results":"30","hashOfConfig":"22"},{"size":5842,"mtime":1607460207214,"results":"31","hashOfConfig":"22"},{"size":3354,"mtime":1607374625278,"results":"32","hashOfConfig":"22"},{"size":2483,"mtime":1607373798472,"results":"33","hashOfConfig":"22"},{"size":3494,"mtime":1607377164697,"results":"34","hashOfConfig":"22"},{"size":3250,"mtime":1607374946047,"results":"35","hashOfConfig":"22"},{"size":3007,"mtime":1607374706104,"results":"36","hashOfConfig":"22"},{"size":3269,"mtime":1607376325373,"results":"37","hashOfConfig":"22"},{"size":3197,"mtime":1607377065833,"results":"38","hashOfConfig":"22"},{"size":2912,"mtime":1607455842401,"results":"39","hashOfConfig":"22"},{"size":4313,"mtime":1607456113694,"results":"40","hashOfConfig":"22"},{"size":3761,"mtime":1607462583551,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"l7c6ow",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\index.js",[],["97","98"],"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\App.js",[],"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\reportWebVitals.js",[],"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\HeaderComponent\\HeaderComponent.jsx",["99","100"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function NavTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          variant=\"fullWidth\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"nav tabs example\"\r\n        >\r\n          <Tab label=\"УЗВ\" href=\"/ClosedWaterSupplyInstallationListByOrganizationId\" {...a11yProps(0)} />\r\n          <Tab label=\"басейни\" href=\"/PoolListByOrganizationId\" {...a11yProps(1)} />\r\n          <Tab label=\"вид риби\" href=\"/KindOfFishList\" {...a11yProps(4)} />\r\n          <Tab label=\"вагітність\" href=\"/spam1\" {...a11yProps(5)} />\r\n          <Tab label=\"дойка\" href=\"/spam1\" {...a11yProps(6)} />\r\n          <Tab label=\"організація\" href=\"/spam1\" {...a11yProps(7)} />\r\n\r\n        </Tabs>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\baseUrl.jsx",["101","102"],"export const baseUrl = 'https://localhost:5001/api/';\r\nexport const getCookie = (name) => {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') \r\n            c = c.substring(1, c.length);\r\n        if (c.indexOf(nameEQ) == 0) \r\n            return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n}","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\MainComponent.js",[],"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\SignUpComponent\\SignUpComponent.jsx",["103"],"import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n        </Typography>\r\n          <form noValidate model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  autoComplete=\"phone\"\r\n                  name=\"phone\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Phone Number\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Sign Up\r\n          </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n              </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\LogInComponent\\LogInComponent.jsx",["104","105","106","107","108","109"],"// import React, { Component } from 'react';\r\n\r\n\r\n\r\n// const required = (val) => val && val.length;\r\n// const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n// const minLength = (len) => (val) => (val) && (val.length >= len);\r\n// const isNumber = (val) => !isNaN(Number(val));\r\n// const validMail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n// class LogIn extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             Mail: \"\",\r\n//             Password: \"\"\r\n//         }\r\n\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//         this.changeMail = this.changeMail.bind(this);\r\n//         this.changeName = this.changePassword.bind(this);\r\n//     }\r\n\r\n//     handleSubmit(value) {\r\n//         const newAccount = {\r\n//             Mail: value.email,\r\n//             Password: value.password\r\n//         }\r\n//         fetch(baseUrl + \"Organization/GetId\", {\r\n//             method: 'POST',\r\n//             body: JSON.stringify(newAccount),\r\n//             headers: {\r\n//                 'Accept': 'application/json, text/plain, */*',\r\n//                 'Content-Type': 'application/json; charset=UTF-8'\r\n//             },\r\n//             credentials: 'same-origin'\r\n//         })\r\n//             .then(response => response.json())\r\n//             .then(\r\n//                 (response) => {\r\n//                     document.cookie = \"organizatiomId=\" + response.organizationId;\r\n//                 },\r\n//                 (error) => {\r\n//                     alert('мейл' + newAccount.Mail + \r\n//                     'пароль ' + newAccount.Password);\r\n\r\n//                 }\r\n//             )\r\n//     }\r\n\r\n//     changeMail(event) {\r\n//         this.setState({Mail: event.target.value});\r\n//         console.log(this.state.Mail)\r\n//       }\r\n\r\n//       changePassword(event) {\r\n//         this.setState({Password: event.target.value});\r\n//         console.log(this.state.Password)\r\n//       }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"col-12\">\r\n\r\n//                 </div>\r\n//                 <div>\r\n//                     <h2>Добавить пользователя</h2>\r\n//                     <form onSubmit={this.handleSubmit}>\r\n//                         <div className=\"form-group\">\r\n//                             <input className=\"form-control\" id=\"Mail\" name=\"Mail\" value={this.state.Mail} onChange={this.changeMail}/>\r\n//                             <input className=\"form-control\" id=\"Password\" name=\"Password\" value={this.state.Password} onChange={this.changePassword}/>\r\n//                         </div>\r\n//                         <button\r\n//                             className=\"form-group\"\r\n//                             type=\"submit\"\r\n//                             style={{ width: '20%', backgroundColor: '#003F00', marginBottom: \"20px\" }}\r\n//                         > Добавить\r\n//                     </button>\r\n//                     </form>\r\n\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// export default LogIn;\r\n\r\nimport React, { Component } from 'react';\r\nimport { baseUrl } from '../baseUrl';\r\n\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validMail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass LogIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Mail: \"\",\r\n            Password: \"\"\r\n        }\r\n\r\n        this.addUser = this.addUser.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.changeMail = this.changeMail.bind(this);\r\n        this.changePassword = this.changePassword.bind(this);\r\n    }\r\n    addUser(Mail, UserName/*, Password*/) {\r\n        console.log(Mail);\r\n        console.log(UserName);\r\n    }\r\n\r\n    changeMail(event) {\r\n        this.setState({ Mail: event.target.value });\r\n    }\r\n\r\n    changePassword(event) {\r\n        this.setState({ Password: event.target.value });\r\n    }\r\n    \r\n    returnUserId(Mail, Password) {\r\n        const newAccount = {\r\n            Mail: Mail,\r\n            Password: Password,\r\n        }\r\n        fetch(baseUrl + \"Organization/GetId\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(newAccount),\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json; charset=UTF-8'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n            .then(response => response.json())\r\n            .then(\r\n                (response) => {\r\n                    console.log(response);\r\n                    if(response == -1){\r\n                        alert('такого аккаунта нет');\r\n                    }\r\n                    else{\r\n                        document.cookie = \"organizationId=\" + response;\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log('Post account ', error);\r\n                    alert('Your account could not be posted\\nError: ' + error);\r\n                    alert('мейл' + newAccount.Mail +\r\n                        'пароль ' + newAccount.Password);\r\n\r\n                }\r\n            )\r\n    }\r\n\r\n    handleSubmit = event => {\r\n\r\n        this.returnUserId(this.state.Mail, this.state.Password);\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"col-12\">\r\n\r\n                </div>\r\n                <div>\r\n                    <h2>Добавить пользователя</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\" id=\"Mail\" name=\"Mail\" value={this.state.Mail} onChange={this.changeMail} />\r\n                            <input className=\"form-control\" id=\"Password\" name=\"Password\" value={this.state.Password} onChange={this.changePassword} />\r\n                        </div>\r\n                        <button\r\n                            className=\"form-group\"\r\n                            type=\"submit\"\r\n                            style={{ width: '20%', backgroundColor: '#003F00', marginBottom: \"20px\" }}\r\n                        > Добавить\r\n                    </button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogIn;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\FishComponent\\FishEditComponent.jsx",["110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport { baseUrl } from '../baseUrl';\r\n\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validMail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass LogIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            FishId: \"\",\r\n            KindOfFishId: \"\",\r\n            Sex: \"\",\r\n            DateOfBirth: \"\",\r\n            PoolNowId: \"\",\r\n            RelocationPoolId: \"\",\r\n            Weight: \"\",\r\n            Adulthood: \"\",\r\n            State: \"\"\r\n        }\r\n        this.addUser = this.addUser.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.changeFishId = this.changeFishId.bind(this);\r\n        this.changePassword = this.changePassword.bind(this);\r\n    }\r\n    addUser(Mail, UserName/*, Password*/) {\r\n        console.log(Mail);\r\n        console.log(UserName);\r\n    }\r\n\r\n    changeFishId(event) {\r\n        this.setState({ Mail: event.target.value });\r\n    }\r\n\r\n    changePassword(event) {\r\n        this.setState({ Password: event.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.FishId);\r\n        fetch(baseUrl + \"Fish/GetById/\" + this.props.match.params.FishId,\r\n         {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json; charset=UTF-8'\r\n            },\r\n            credentials: 'same-origin'\r\n        })\r\n            .then(result => result.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log(result);\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        FishId: result.fishId,\r\n                        KindOfFishId: result.kindOfFishId,\r\n                        Sex: result.sex,\r\n                        DateOfBirth: result.dateOfBirth,\r\n                        PoolNowId: result.poolNowId,\r\n                        RelocationPoolId: result.relocationPoolId,\r\n                        Weight: result.weight,\r\n                        Adulthood: result.adulthood,\r\n                        State: result.state\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    handleSubmit = event => {\r\n\r\n        this.returnUserId(this.state.Mail, this.state.Password);\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"col-12\">\r\n                </div>\r\n                <div>\r\n                    <h2>Змінити інформацію про рибину</h2>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input className=\"form-control\" id=\"fishId\" name=\"FishId\" value={this.state.FishId} onChange={this.changeFishId} />\r\n                            <input className=\"form-control\" id=\"kindOfFishId\" name=\"KindOfFishId\" value={this.state.KindOfFishId} onChange={this.changeKindOfFishId} />\r\n                            <input className=\"form-control\" id=\"sex\" name=\"Sex\" value={this.state.Sex} onChange={this.changeSex} />\r\n                            <input className=\"form-control\" id=\"dateOfBirth\" name=\"DateOfBirth\" value={this.state.DateOfBirth} onChange={this.changeDateOfBirth} />\r\n                            <input className=\"form-control\" id=\"poolNowId\" name=\"PoolNowId\" value={this.state.PoolNowId} onChange={this.changePoolNowId} />\r\n                            <input className=\"form-control\" id=\"relocationPoolId\" name=\"RelocationPoolId\" value={this.state.RelocationPoolId} onChange={this.changeRelocationPoolId} />\r\n                            <input className=\"form-control\" id=\"weight\" name=\"Weight\" value={this.state.Weight} onChange={this.changeWeight} />\r\n                            <input className=\"form-control\" id=\"adulthood\" name=\"Adulthood\" value={this.state.Adulthood} onChange={this.changeAdulthood} />\r\n                            <input className=\"form-control\" id=\"state\" name=\"State\" value={this.state.State} onChange={this.changeState} />\r\n                        </div>\r\n                        <button\r\n                            className=\"form-group\"\r\n                            type=\"submit\"\r\n                            style={{ width: '20%', backgroundColor: '#003F00', marginBottom: \"20px\" }}\r\n                        > Добавить\r\n                    </button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogIn;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\ClosedWaterSupplyInstallation\\ClosedWaterSupplyInstallationComponent.jsx",["115","116","117"],"D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PoolComponent\\PoolListByOrganizationIdComponent.jsx",["118","119","120","121","122","123","124","125","126"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nclass PoolListByOrganizationId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'poolId', headerName: 'PoolId', width: 160 },\r\n        { field: 'closedWaterSupplyInstallationId', headerName: 'ClosedWaterSupplyInstallationId', width: 160 },\r\n        { field: 'whoIsInThePool', headerName: 'WhoIsInThePool', width: 160 },\r\n        { field: 'volume', headerName: 'Volume', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n    this.selectRout = this.selectRout.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.poolId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div>\r\n\r\n        </div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <div >\r\n          <Button onClick={() => this.selectRout()}>\r\n            вміст басейну басейні\r\n            </Button>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  selectRout() {\r\n    if (this.state.currentRow.whoIsInThePool == \"fish\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/FishListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n    else if (this.state.currentRow.whoIsInThePool == \"herd\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/HerdListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n  }\r\n\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        poolId: element.poolId,\r\n        closedWaterSupplyInstallationId: element.closedWaterSupplyInstallationId,\r\n        whoIsInThePool: element.whoIsInThePool,\r\n        volume: element.volume\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `Pool/GetByOrganizatoinId/${getCookie(\"organizationId\")}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default PoolListByOrganizationId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\KindOfFishComponent\\KindOfFishListComponent.jsx",["127","128","129"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\n\r\nclass KindOfFishList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'kindOfFishId', headerName: 'KindOfFishId', width: 160 },\r\n        { field: 'kind', headerName: 'Kind', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.fishId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div>\r\n          \r\n        </div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <Link to={`/fishEditForm/${ getCookie(\"organizationId\")}`}>\r\n          <div >\r\n            <Button>\r\n              Регистрация\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n      </div >\r\n    );\r\n  }\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        kindOfFishId: element.kindOfFishId,\r\n        kind: element.kind\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `KindOfFish/Get`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default KindOfFishList;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\FishComponent\\FishListByPoolIdComponent.jsx",["130","131","132","133","134"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport FishEditForm from './FishEditComponent'\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\n\r\nclass FishListByPoolId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'fishId', headerName: 'FishId', width: 160 },\r\n        { field: 'kindOfFishId', headerName: 'KindOfFishId', width: 160 },\r\n        { field: 'sex', headerName: 'Sex', width: 160 },\r\n        { field: 'dateOfBirth', headerName: 'DateOfBirth', width: 160 },\r\n        { field: 'poolNowId', headerName: 'PoolNowId', width: 160 },\r\n        { field: 'relocationPoolId', headerName: 'RelocationPoolId', width: 160 },\r\n        { field: 'weight', headerName: 'Weight', width: 160 },\r\n        { field: 'adulthood', headerName: 'Adulthood', width: 160 },\r\n        { field: 'state', headerName: 'State', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.fishId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <Link to={`/MilkinhListByFishId/${this.state.currentRow.fishId}`}>\r\n          <div >\r\n            <Button>\r\n              дойки\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n        <Link to={`/PregancyListByFishId/${this.state.currentRow.fishId}`}>\r\n          <div >\r\n            <Button>\r\n              вагітності\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n      </div >\r\n    );\r\n  }\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        fishId: element.fishId,\r\n        kindOfFishId: element.kindOfFishId,\r\n        sex: element.sex,\r\n        dateOfBirth: element.dateOfBirth,\r\n        poolNowId: element.poolNowId,\r\n        relocationPoolId: element.relocationPoolId,\r\n        weight: element.weight,\r\n        adulthood: element.adulthood,\r\n        state: element.state,\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `Fish/GetFishByPoolId/${this.props.match.params.poolId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default FishListByPoolId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PoolComponent\\PoolListByCWIIdComponent.jsx",["135","136","137","138","139","140","141"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\n\r\nclass PoolListByPoolId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'poolId', headerName: 'PoolId', width: 160 },\r\n        { field: 'closedWaterSupplyInstallationId', headerName: 'ClosedWaterSupplyInstallationId', width: 160 },\r\n        { field: 'whoIsInThePool', headerName: 'WhoIsInThePool', width: 160 },\r\n        { field: 'volume', headerName: 'Volume', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n    this.selectRout = this.selectRout.bind(this);\r\n\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div>\r\n          \r\n        </div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <div >\r\n          <Button onClick={() => this.selectRout()}>\r\n            вміст басейну басейні\r\n            </Button>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  selectRout() {\r\n    if (this.state.currentRow.whoIsInThePool == \"fish\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/FishListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n    else if (this.state.currentRow.whoIsInThePool == \"herd\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/HerdListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n  }\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        poolId: element.poolId,\r\n        closedWaterSupplyInstallationId: element.closedWaterSupplyInstallationId,\r\n        whoIsInThePool: element.whoIsInThePool,\r\n        volume: element.volume\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(baseUrl + \"Pool/GetByCWIIdId/\" + this.props.match.params.closedWaterSupplyInstallationId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default PoolListByPoolId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\HerdComponent\\HerdListByPoolIdComponent.jsx",["142","143","144","145"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\n\r\nclass HerdListByPoolId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'herdId', headerName: 'HerdId', width: 160 },\r\n        { field: 'kindOfFishId', headerName: 'KindOfFishId', width: 160 },\r\n        { field: 'dateOfBirth', headerName: 'DateOfBirth', width: 160 },\r\n        { field: 'poolIdNow', headerName: 'PoolIdNow', width: 160 },\r\n        { field: 'averageWeightOfAnIndividual', headerName: 'AverageWeightOfAnIndividual', width: 160 },\r\n        { field: 'quantity', headerName: 'Quantity', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.fishId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <Link to={`/fishEditForm/${this.state.currentRow.fishId}`}>\r\n          <div >\r\n            <Button>\r\n              Регистрация\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n      </div >\r\n    );\r\n  }\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        herdId: element.herdId,\r\n        kindOfFishId: element.kindOfFishId,\r\n        dateOfBirth: element.dateOfBirth,\r\n        poolIdNow: element.poolIdNow,\r\n        averageWeightOfAnIndividual: element.averageWeightOfAnIndividual,\r\n        quantity: element.quantity\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `Herd/GetAllHerdByPoolId/${this.props.match.params.poolId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default HerdListByPoolId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\MilkingComponent\\MilkinhListByFishIdComponent.jsx",["146","147","148","149","150","151","152","153","154","155"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nclass MilkinhListByFishId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'milkingId', headerName: 'MilkingId', width: 160 },\r\n        { field: 'fishId', headerName: 'FishId', width: 160 },\r\n        { field: 'milkingDate', headerName: 'MilkingDate', width: 160 },\r\n        { field: 'caviarWeight', headerName: 'CaviarWeight', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n    this.selectRout = this.selectRout.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.milkingId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div>\r\n\r\n        </div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <div >\r\n          <Button onClick={() => this.selectRout()}>\r\n            вміст басейну басейні\r\n            </Button>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  selectRout() {\r\n    if (this.state.currentRow.whoIsInThePool == \"fish\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/FishListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n    else if (this.state.currentRow.whoIsInThePool == \"herd\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/HerdListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n  }\r\n\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        milkingId: element.milkingId,\r\n        fishId: element.fishId,\r\n        milkingDate: element.milkingDate,\r\n        caviarWeight: element.caviarWeight\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `Milking/GetByFishId/${this.props.match.params.fishId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default MilkinhListByFishId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PregnancyComponent\\PregancyListByFishIdComponent.jsx",["156","157","158","159","160","161","162","163","164","165"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nclass PregancyListByFishId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'pregnancyId', headerName: 'PregnancyId', width: 160 },\r\n        { field: 'fishId', headerName: 'FishId', width: 160 },\r\n        { field: 'startDateOfPregnancy', headerName: 'StartDateOfPregnancy', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n    this.selectRout = this.selectRout.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.milkingId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div>\r\n\r\n        </div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <div >\r\n          <Button onClick={() => this.selectRout()}>\r\n            вміст басейну басейні\r\n            </Button>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  selectRout() {\r\n    if (this.state.currentRow.whoIsInThePool == \"fish\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/FishListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n    else if (this.state.currentRow.whoIsInThePool == \"herd\"){\r\n      console.log(this.state.currentRow.whoIsInThePool);\r\n      window.location.href =`/HerdListByPoolId/${this.state.currentRow.poolId}`\r\n    }\r\n  }\r\n \r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        pregnancyId: element.pregnancyId,\r\n        fishId: element.fishId,\r\n        startDateOfPregnancy: element.startDateOfPregnancy\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `Pregnancy/GetByFishId/${this.props.match.params.fishId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default PregancyListByFishId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\PoolComponent\\ExpectedWeightOfFishInThePoolByCWIIdComponent.jsx",["166","167","168","169"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\n\r\nclass ExpectedWeightOfFishInThePoolByCWIId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'poolId', headerName: 'PoolId', width: 160 },\r\n        { field: 'maxWeight', headerName: 'MaxWeight', width: 160 },\r\n        { field: 'currentWeight', headerName: 'CurrentWeight', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div>\r\n\r\n        </div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <Link to={`/FishListByPoolId/${this.state.currentRow.poolId}`}>\r\n          <div >\r\n            <Button>\r\n              Вміст басейну зараз\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n        <Link to={`/FishListForRelocationByPoolId/${this.state.currentRow.poolId}`}>\r\n          <div >\r\n            <Button>\r\n              Рыба для переносу\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  \r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        poolId: element.poolId,\r\n        maxWeight: element.maxWeight,\r\n        currentWeight: element.currentWeight\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(baseUrl + \"Pool/GetWeightOfFishInThePool/\" + this.props.match.params.closedWaterSupplyInstallationId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpectedWeightOfFishInThePoolByCWIId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\FishComponent\\FishListForRelocationByPoolIdComponent.jsx",["170","171","172","173","174"],"import React, { Component } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { baseUrl, getCookie } from '../baseUrl';\r\nimport FishEditForm from './FishEditComponent'\r\nimport { Link } from 'react-router-dom';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\n\r\nclass FishListForRelocationByPoolId extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      columns: [\r\n        { field: 'fishId', headerName: 'FishId', width: 160 },\r\n        { field: 'kindOfFishId', headerName: 'KindOfFishId', width: 160 },\r\n        { field: 'sex', headerName: 'Sex', width: 160 },\r\n        { field: 'dateOfBirth', headerName: 'DateOfBirth', width: 160 },\r\n        { field: 'poolNowId', headerName: 'PoolNowId', width: 160 },\r\n        { field: 'relocationPoolId', headerName: 'RelocationPoolId', width: 160 },\r\n        { field: 'weight', headerName: 'Weight', width: 160 },\r\n        { field: 'adulthood', headerName: 'Adulthood', width: 160 },\r\n        { field: 'state', headerName: 'State', width: 160 }\r\n      ],\r\n      rows: [],\r\n      currentRow: {\r\n        id: -1\r\n      }\r\n    }\r\n\r\n    this.dataGridDemo = this.dataGridDemo.bind(this);\r\n    this.setSelection = this.setSelection.bind(this);\r\n    this.ConfirmRelocation = this.ConfirmRelocation.bind(this);\r\n  }\r\n  setSelection(row) {\r\n    this.setState({ currentRow: row });\r\n    console.log(this.state.currentRow)\r\n    console.log(\"Ид\" + this.state.currentRow.fishId)\r\n  }\r\n\r\n  dataGridDemo(state) {\r\n    return (\r\n      <div>\r\n        <div style={{ height: 640, width: '100%' }}>\r\n          <DataGrid rows={state.rows} columns={state.columns} pageSize={10}\r\n            onSelectionChange={(newSelection) => { this.setSelection(this.state.rows[newSelection.rowIds]); }}\r\n          />\r\n        </div>\r\n        <Link to={`/MilkinhListByFishId/${this.state.currentRow.fishId}`}>\r\n          <div >\r\n            <Button>\r\n              дойки\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n        <Link to={`/PregancyListByFishId/${this.state.currentRow.fishId}`}>\r\n          <div >\r\n            <Button>\r\n              вагітності\r\n            </Button>\r\n          </div>\r\n        </Link>\r\n        <div >\r\n            <Button onClick={this.ConfirmRelocation} >\r\n              Підтвердити перенос\r\n            </Button>\r\n          </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  ConfirmRelocation() {\r\n    fetch(baseUrl + `Fish/ConfirmRelocation/${this.state.currentRow.fishId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            this.componentDidMount();\r\n            alert(\"Ok\");\r\n          }\r\n        },\r\n        (error) => {\r\n          alert(error);\r\n\r\n        }\r\n      );\r\n  }\r\n  fillRows(result) {\r\n    var res = [];\r\n    var i = 0;\r\n    result.forEach(element => {\r\n      res[i] = {\r\n        id: i,\r\n        fishId: element.fishId,\r\n        kindOfFishId: element.kindOfFishId,\r\n        sex: element.sex,\r\n        dateOfBirth: element.dateOfBirth,\r\n        poolNowId: element.poolNowId,\r\n        relocationPoolId: element.relocationPoolId,\r\n        weight: element.weight,\r\n        adulthood: element.adulthood,\r\n        state: element.state,\r\n      };\r\n      i++;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    fetch(baseUrl + `Fish/GetFishForRelocationByPoolId/${this.props.match.params.poolId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json; charset=UTF-8'\r\n      },\r\n      credentials: 'same-origin'\r\n    })\r\n      .then(result => result.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            rows: this.fillRows(result)\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.dataGridDemo(this.state)\r\n    );\r\n  }\r\n}\r\n\r\nexport default FishListForRelocationByPoolId;","D:\\XHYPE\\AtaRK_front-end\\atark_front-end\\src\\components\\ClosedWaterSupplyInstallation\\AddClosedWaterSupplyInstallationComponent.jsx",["175","176","177","178","179","180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":44,"column":10,"nodeType":"187","messageId":"188","endLine":44,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":7,"column":28,"nodeType":"192","messageId":"193","endLine":7,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":9,"column":31,"nodeType":"192","messageId":"193","endLine":9,"endColumn":33},{"ruleId":"194","severity":1,"message":"195","line":12,"column":3,"nodeType":"196","messageId":"197","endLine":14,"endColumn":4},{"ruleId":"185","severity":1,"message":"198","line":97,"column":7,"nodeType":"187","messageId":"188","endLine":97,"endColumn":15},{"ruleId":"185","severity":1,"message":"199","line":98,"column":7,"nodeType":"187","messageId":"188","endLine":98,"endColumn":16},{"ruleId":"185","severity":1,"message":"200","line":99,"column":7,"nodeType":"187","messageId":"188","endLine":99,"endColumn":16},{"ruleId":"185","severity":1,"message":"201","line":100,"column":7,"nodeType":"187","messageId":"188","endLine":100,"endColumn":15},{"ruleId":"185","severity":1,"message":"202","line":101,"column":7,"nodeType":"187","messageId":"188","endLine":101,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":149,"column":33,"nodeType":"192","messageId":"193","endLine":149,"endColumn":35},{"ruleId":"185","severity":1,"message":"198","line":7,"column":7,"nodeType":"187","messageId":"188","endLine":7,"endColumn":15},{"ruleId":"185","severity":1,"message":"199","line":8,"column":7,"nodeType":"187","messageId":"188","endLine":8,"endColumn":16},{"ruleId":"185","severity":1,"message":"200","line":9,"column":7,"nodeType":"187","messageId":"188","endLine":9,"endColumn":16},{"ruleId":"185","severity":1,"message":"201","line":10,"column":7,"nodeType":"187","messageId":"188","endLine":10,"endColumn":15},{"ruleId":"185","severity":1,"message":"202","line":11,"column":7,"nodeType":"187","messageId":"188","endLine":11,"endColumn":16},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"206","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":16},{"ruleId":"185","severity":1,"message":"207","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":23},{"ruleId":"185","severity":1,"message":"208","line":6,"column":25,"nodeType":"187","messageId":"188","endLine":6,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":58,"column":46,"nodeType":"192","messageId":"193","endLine":58,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":62,"column":51,"nodeType":"192","messageId":"193","endLine":62,"endColumn":53},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"210","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":20},{"ruleId":"185","severity":1,"message":"203","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":6,"column":17,"nodeType":"187","messageId":"188","endLine":6,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":6,"column":22,"nodeType":"187","messageId":"188","endLine":6,"endColumn":25},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":57,"column":46,"nodeType":"192","messageId":"193","endLine":57,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":61,"column":51,"nodeType":"192","messageId":"193","endLine":61,"endColumn":53},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"206","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":16},{"ruleId":"185","severity":1,"message":"207","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":23},{"ruleId":"185","severity":1,"message":"208","line":6,"column":25,"nodeType":"187","messageId":"188","endLine":6,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":58,"column":46,"nodeType":"192","messageId":"193","endLine":58,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":62,"column":51,"nodeType":"192","messageId":"193","endLine":62,"endColumn":53},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"206","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":16},{"ruleId":"185","severity":1,"message":"207","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":23},{"ruleId":"185","severity":1,"message":"208","line":6,"column":25,"nodeType":"187","messageId":"188","endLine":6,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":57,"column":46,"nodeType":"192","messageId":"193","endLine":57,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":61,"column":51,"nodeType":"192","messageId":"193","endLine":61,"endColumn":53},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"209","line":3,"column":19,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"210","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":20},{"ruleId":"185","severity":1,"message":"203","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":6,"column":17,"nodeType":"187","messageId":"188","endLine":6,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":6,"column":22,"nodeType":"187","messageId":"188","endLine":6,"endColumn":25},{"ruleId":"185","severity":1,"message":"211","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"203","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"204","line":5,"column":17,"nodeType":"187","messageId":"188","endLine":5,"endColumn":20},{"ruleId":"185","severity":1,"message":"205","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"212","line":5,"column":27,"nodeType":"187","messageId":"188","endLine":5,"endColumn":33},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'LinkTab' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'required' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","'isNumber' is assigned a value but never used.","'validMail' is assigned a value but never used.","'Label' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'getCookie' is defined but never used.","'FishEditForm' is defined but never used.","'DataGrid' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]